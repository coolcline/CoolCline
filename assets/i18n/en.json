{
	"common": {
		"done": "Done",
		"add": "Add",
		"delete": "Delete",
		"rename": "Rename",
		"preview": "Preview",
		"save": "Save",
		"cancel": "Cancel",
		"create": "Create",
		"prompt": "Prompt",
		"actions": {
			"reset": "Reset to default",
			"edit": "Edit",
			"save": "Save",
			"cancel": "Cancel",
			"close": "Close",
			"doneEditing": "Done editing"
		},
		"status": {
			"loading": "Loading...",
			"error": "Error",
			"success": "Success"
		},
		"noDescription": "No description",
		"unknown": "Unknown"
	},
	"welcome": {
		"title": "Welcome!",
		"description": "CoolCline is a proactive programming assistant that enhances your development workflow with advanced AI capabilities. It helps you write code more efficiently, optimize queries, auto-fix errors, run command-line tasks, and perform browser automation tests.",
		"readmeLink": "README",
		"apiProviderNeeded": "To get started, this extension needs an API provider.",
		"letsGo": "Let's go!"
	},
	"chat": {
		"welcome": {
			"title": "What can I do for you?",
			"description": "CoolCline is a proactive programming assistant that enhances your development workflow with advanced AI capabilities. It helps you write code more efficiently, optimize queries, auto-fix errors, run command-line tasks, and perform browser automation tests.",
			"readMore": "README"
		},
		"browser": {
			"action": "Browse Action",
			"launch": "Launch browser at {url}",
			"click": "Click ({coordinate})",
			"type": "Type \"{text}\"",
			"scrollDown": "Scroll down",
			"scrollUp": "Scroll up",
			"close": "Close browser"
		},
		"task": {
			"title": "Task",
			"seeMore": "See more",
			"seeLess": "See less",
			"tokens": "Tokens",
			"context": "Context",
			"cache": "Cache",
			"apiCost": "API Cost",
			"export": "EXPORT"
		},
		"messages": {
			"error": "Error",
			"trouble": "CoolCline is having trouble...",
			"executeCommand": "CoolCline wants to execute this command:",
			"useTool": "use a tool",
			"accessResource": "access a resource",
			"taskCompleted": "Task Completed",
			"apiCancelled": "API Request Cancelled",
			"apiStreamingFailed": "API Streaming Failed",
			"apiRequest": "API Request",
			"apiFailed": "API Request Failed",
			"apiInProgress": "API Request...",
			"question": "CoolCline has a question:",
			"searchDirectory": "CoolCline wants to search this directory for",
			"searchedDirectory": "CoolCline searched this directory for",
			"switchMode": "CoolCline wants to switch to",
			"switchedMode": "CoolCline switched to",
			"modeBecause": "mode because:",
			"mode": "mode",
			"response": "Response"
		},
		"actions": {
			"edit": "Edit...",
			"separator": "────",
			"newChat": "New Chat"
		},
		"announcement": {
			"title": "🎉 Introducing CoolCline",
			"customization": {
				"title": "Custom Modes: Celebrating Our New Identity",
				"description": "To mark this new chapter, we're introducing the power to shape CoolCline into any role you need! Create specialized personas and create an entire team of agents with deeply customized prompts:",
				"examples": {
					"qa": "QA Engineers who write thorough test cases and catch edge cases",
					"pm": "Product Managers who excel at user stories and feature prioritization",
					"ui": "UI/UX Designers who craft beautiful, accessible interfaces",
					"reviewer": "Code Reviewers who ensure quality and maintainability"
				},
				"getStarted": "Just click the notebook icon to get started with Custom Modes!"
			},
			"join": {
				"title": "Join Us for the Next Chapter",
				"description": "We can't wait to see how you'll push CoolCline's potential even further! Share your custom modes and join the discussion at"
			}
		},
		"autoApprove": {
			"title": "Auto-approve",
			"none": "None",
			"description": "Auto-approve allows CoolCline to perform actions without asking for permission. Only enable for actions you fully trust.",
			"actions": {
				"readFiles": {
					"label": "Read files and directories",
					"description": "Allows access to read any file on your computer."
				},
				"editFiles": {
					"label": "Edit files",
					"description": "Allows modification of any files on your computer."
				},
				"executeCommands": {
					"label": "Execute approved commands",
					"description": "Allows execution of approved terminal commands. You can configure this in the settings panel."
				},
				"useBrowser": {
					"label": "Use the browser",
					"description": "Allows ability to launch and interact with any website in a headless browser."
				},
				"useMcp": {
					"label": "Use MCP servers",
					"description": "Allows use of configured MCP servers which may modify filesystem or interact with APIs."
				},
				"switchModes": {
					"label": "Switch modes & create tasks",
					"description": "Allows automatic switching between different AI modes and creating new tasks without requiring approval."
				},
				"retryRequests": {
					"label": "Retry failed requests",
					"description": "Automatically retry failed API requests when the provider returns an error response."
				}
			}
		},
		"contextMenu": {
			"problems": "Problems",
			"pasteUrl": "Paste URL to fetch contents",
			"noResults": "No results found",
			"gitCommits": "Git Commits",
			"addFile": "Add File",
			"addFolder": "Add Folder"
		},
		"reasoning": {
			"title": "Reasoning"
		},
		"input": {
			"typeMessage": "Type a message...",
			"typeTask": "Type your task here...",
			"addContext": "(@ to add context",
			"switchMode": ", / to switch modes",
			"dragImages": ", hold shift to drag in images"
		}
	},
	"prompts": {
		"settings": {
			"sections": {
				"general": "General Prompt Settings",
				"modes": "Role Mode Prompt Settings",
				"tools": "Support Prompt Settings"
			},
			"language": {
				"title": "Language",
				"description": "Set the AI assistant's response language, the interface will also switch to the selected language",
				"select": "Select Language"
			},
			"customInstructions": {
				"title": "General Behavior Instructions",
				"description": "These instructions apply to all modes as base behavior guidelines, which can be extended by mode-specific instructions below",
				"loadFrom": "Instructions can also be loaded from",
				"inWorkspace": "in your workspace"
			},
			"modePrompts": {
				"title": "Prompt Settings",
				"description": "Hit the + to create a new custom mode, or just ask CoolCline in chat to create one for you!",
				"createMode": "Create new mode",
				"editConfig": "Edit modes configuration",
				"name": "Name",
				"specificPrompts": "Mode-Specific Prompts",
				"slug": {
					"title": "Identifier",
					"description": "A unique identifier used in URLs and file names, should only contain lowercase letters, numbers, and hyphens"
				},
				"roleDefinition": {
					"title": "Role Definition",
					"description": "Define CoolCline's expertise and personality traits for this mode, which will determine its working style and behavior",
					"createDescription": "Define the expertise and personality traits for this mode"
				},
				"apiConfig": {
					"title": "API Configuration",
					"description": "Select API configuration for this mode",
					"useCurrentConfig": "Use currently selected API configuration",
					"enhancePrompts": "You can select an API configuration specifically for prompt enhancement"
				},
				"tools": {
					"title": "Available Tools",
					"cannotModify": "Tools for built-in modes cannot be modified",
					"selectTools": "Select which tools this mode can use",
					"availableTitle": "Available Tools List",
					"selectDescription": "Select which tools this mode can use"
				},
				"customInstructions": {
					"title": "Mode-specific Instructions",
					"description": "Add behavioral guidelines specific to {mode} mode",
					"loadFrom": "Mode-specific instructions for {mode} can also be loaded from",
					"inWorkspace": "in your workspace",
					"createDescription": "Add behavioral guidelines specific to this mode",
					"modeSpecific": "Mode-specific Instructions"
				},
				"preview": "Preview System Prompt"
			},
			"api": {
				"title": "API Settings",
				"configProfile": {
					"title": "Configuration Profiles",
					"description": "Configure API profiles for quick switching between providers in the chat input bar"
				},
				"model": {
					"title": "Model",
					"search": "Search models...",
					"selected": "Currently selected model:"
				},
				"provider": {
					"title": "Provider",
					"openai": "OpenAI",
					"glama": "Glama",
					"openRouter": "OpenRouter"
				}
			},
			"experimental": {
				"title": "Experimental Features",
				"description": "Enable or disable experimental features"
			}
		},
		"support": {
			"title": "Support Prompt Settings",
			"enhance": {
				"title": "Enhance",
				"testPrompt": "Enter prompt to test enhancement",
				"preview": "Preview Prompt Enhancement",
				"enterPrompt": "Enter prompt to test enhancement"
			},
			"prompts": {
				"enhance": {
					"label": "Prompt Enhancement",
					"description": "Get more precise suggestions and improvements through prompt enhancement. This ensures CoolCline accurately understands your intent and provides the best response. Available via the ✨ icon in chat interface."
				},
				"explain": {
					"label": "Code Explanation",
					"description": "Get detailed explanations of code snippets, functions, or entire files. Suitable for understanding complex code or learning new programming patterns. Available through smart suggestions (lightbulb icon) or right-click menu in editor."
				},
				"fix": {
					"label": "Issue Fix",
					"description": "Help identify and resolve program errors, bugs, or code quality issues, providing step-by-step fix guidance. Available through smart suggestions (lightbulb icon) or right-click menu in editor."
				},
				"improve": {
					"label": "Code Optimization",
					"description": "Get code optimization suggestions, best practices, and architectural improvements while maintaining functionality. Available through smart suggestions (lightbulb icon) or right-click menu in editor."
				},
				"addToContext": {
					"label": "Add Context",
					"description": "Add supplementary information to current task or conversation. Used for providing additional explanations or clarifying details. Available through smart suggestions (lightbulb icon) or right-click menu in editor."
				}
			}
		}
	},
	"mcp": {
		"title": "MCP Servers",
		"modelContextProtocol": "Model Context Protocol",
		"description": {
			"part1": "enables communication with locally running MCP servers that provide additional tools and resources to extend CoolCline's capabilities. You can use",
			"part2": "or ask CoolCline to create new tools specific to your workflow (e.g., \"add a tool that gets the latest npm docs\")."
		},
		"communityServers": "community-made servers",
		"enable": {
			"title": "Enable MCP Servers",
			"description": "When enabled, CoolCline will be able to interact with MCP servers for advanced functionality. If you're not using MCP, you can disable this to reduce CoolCline's token usage."
		},
		"serverCreation": {
			"title": "Enable MCP Server Creation",
			"description": "When enabled, CoolCline can help you create new MCP servers via commands like \"add a new tool to...\". If you don't need to create MCP servers you can disable this to reduce CoolCline's token usage."
		},
		"editSettings": "Edit MCP Settings",
		"tools": {
			"title": "Tools",
			"parameters": "Parameters",
			"alwaysAllow": "Always allow",
			"noTools": "No tools found"
		},
		"resources": {
			"title": "Resources",
			"returns": "Returns",
			"noResources": "No resources found"
		},
		"timeout": {
			"15": "15 seconds",
			"30": "30 seconds",
			"60": "1 minute",
			"300": "5 minutes",
			"600": "10 minutes",
			"900": "15 minutes",
			"1800": "30 minutes",
			"3600": "60 minutes",
			"title": "Network Timeout",
			"description": "Maximum time to wait for server responses"
		},
		"server": {
			"restart": "Restart Server",
			"restarting": "Restarting...",
			"retry": "Retry Connection",
			"retrying": "Retrying..."
		}
	},
	"history": {
		"title": "History",
		"search": {
			"placeholder": "Fuzzy search history...",
			"clear": "Clear search"
		},
		"sort": {
			"newest": "Newest",
			"oldest": "Oldest",
			"mostExpensive": "Most Expensive",
			"mostTokens": "Most Tokens",
			"mostRelevant": "Most Relevant"
		},
		"preview": {
			"recentTasks": "Recent Tasks",
			"viewAll": "View all history",
			"promptCopied": "Prompt Copied to Clipboard",
			"metrics": {
				"tokens": "Tokens",
				"cache": "Cache",
				"apiCost": "API Cost"
			}
		}
	},
	"settings": {
		"title": "Settings",
		"done": "Done",
		"provider": {
			"title": "Provider",
			"apiProvider": "API Provider",
			"apiKey": {
				"title": "API Key",
				"placeholder": "Enter your API key",
				"storedLocally": "API key is stored securely on your local machine",
				"getKey": "Get API Key"
			},
			"customBaseUrl": {
				"title": "Custom Base URL",
				"placeholder": "Default: {defaultUrl}"
			},
			"configProfile": {
				"title": "Configuration Profile",
				"description": "Save different API configurations to quickly switch between providers and settings"
			},
			"providers": {
				"anthropic": {
					"name": "Anthropic",
					"title": "Anthropic API Key",
					"baseUrl": "Base URL (optional)",
					"enterBaseUrl": "Enter API base URL",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "You can get an Anthropic API key by signing up here."
				},
				"openai": {
					"name": "OpenAI Compatible",
					"title": "OpenAI Compatible Service",
					"baseUrl": "Base URL",
					"enterBaseUrl": "Enter base URL",
					"useAzure": "Use Azure OpenAI",
					"setAzureVersion": "Set Azure API Version",
					"description": "Use OpenAI-compatible API service",
					"streaming": "Enable streaming",
					"modelConfig": {
						"title": "Model Configuration",
						"description": "Configure model capabilities and pricing information",
						"capabilities": {
							"title": "Model Capabilities",
							"description": "Configure the capabilities and pricing for your custom OpenAI-compatible model",
							"warning": "Be careful for the model capabilities, as they can affect how CoolCline can work",
							"maxTokens": {
								"title": "Max Output Tokens",
								"description": "Maximum number of tokens the model can generate in a response",
								"note": "(-1 is depend on server)"
							},
							"contextWindow": {
								"title": "Context Window Size",
								"description": "Total tokens (input + output) the model can process. This will help CoolCline Code run correctly"
							}
						},
						"features": {
							"title": "Model Features",
							"imageSupport": {
								"title": "Image Support",
								"description": "Enable if the model can process and understand images in the input. Required for image-based assistance and visual code understanding",
								"note": "Allows the model to analyze and understand images, essential for visual code assistance"
							},
							"computerUse": {
								"title": "Computer Use",
								"description": "Enable if the model can interact with your computer through commands and file operations. Required for automated tasks and file modifications",
								"note": "This model feature is for computer use like sonnet 3.5 support"
							}
						},
						"pricing": {
							"title": "Model Pricing",
							"description": "Configure token-based pricing in USD per million tokens",
							"inputPrice": {
								"title": "Input Price",
								"description": "Cost per million tokens in the input/prompt. This affects the cost of sending context and instructions to the model"
							},
							"outputPrice": {
								"title": "Output Price",
								"description": "Cost per million tokens in the model's response. This affects the cost of generated content and completions"
							}
						}
					}
				},
				"openaiNative": {
					"name": "OpenAI Native",
					"title": "OpenAI API Key",
					"description": "Use OpenAI's official API service",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "You can get an OpenAI API key by signing up here."
				},
				"glama": {
					"name": "Glama",
					"title": "Glama API Key",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "Get Glama API Key"
				},
				"bedrock": {
					"name": "AWS Bedrock",
					"title": "AWS Bedrock",
					"credentials": "AWS Credentials",
					"profile": "AWS Profile",
					"accessKey": "Access Key ID",
					"secretKey": "Secret Key",
					"sessionToken": "Session Token (optional)",
					"region": "Region",
					"selectRegion": "Select Region",
					"useCrossRegion": "Use Cross-Region Inference",
					"description": "Use AWS Bedrock's AI model service",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "Configure AWS credentials"
				},
				"openRouter": {
					"name": "OpenRouter",
					"title": "OpenRouter API Key",
					"getKey": "Get OpenRouter API Key",
					"compressPrompts": "Compress prompts and message chain to context size",
					"transforms": "OpenRouter Transforms",
					"useCustomBaseUrl": "Use custom base URL"
				},
				"vertex": {
					"name": "Google Vertex AI",
					"title": "Google Vertex AI",
					"projectId": "Google Cloud Project ID",
					"enterProjectId": "Enter Project ID",
					"region": "Google Cloud Region",
					"selectRegion": "Select Region",
					"description": "To use Google Cloud Vertex AI, you need to 1) create a Google Cloud account › enable the Vertex AI API › enable the desired Claude models, 2) install the Google Cloud CLI › configure Application Default Credentials.",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "Configure Google Cloud credentials"
				},
				"mistral": {
					"name": "Mistral",
					"title": "Mistral API Key",
					"description": "Use Mistral AI model service",
					"getKey": "You can get a Mistral API key by signing up here",
					"useCustomBaseUrl": "Use custom base URL",
					"placeholder": "Enter API Key..."
				},
				"gemini": {
					"name": "Gemini",
					"title": "Gemini API Key",
					"description": "Use Google's Gemini AI models",
					"getKey": "Get Gemini API key",
					"useCustomBaseUrl": "Use custom base URL",
					"placeholder": "Enter API Key..."
				},
				"ollama": {
					"name": "Ollama",
					"title": "Ollama",
					"baseUrl": "Base URL",
					"enterBaseUrl": "Enter base URL",
					"modelId": "Model ID",
					"enterModelId": "Example: meta-llama-3.1-8b-instruct",
					"description": "Ollama allows you to run open-source language models locally",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "Configure Ollama",
					"quickstartGuide": "Quick Start Guide",
					"localServer": "Local Server"
				},
				"lmstudio": {
					"name": "LM Studio",
					"title": "LM Studio",
					"baseUrl": "Base URL (optional)",
					"modelId": "Model ID",
					"enterModelId": "e.g. meta-llama-3.1-8b-instruct",
					"description": "LM Studio allows you to run models locally on your computer. For instructions on how to get started, see their quickstart guide. You will also need to start LM Studio's local server feature to use it with this extension.",
					"useCustomBaseUrl": "Use custom base URL",
					"getKey": "Set up LM Studio",
					"quickstartGuide": "quickstart guide",
					"localServer": "local server"
				},
				"vscode": {
					"name": "VS Code",
					"title": "VS Code LM API",
					"description": "Use VS Code's built-in language model API",
					"modelSelector": "Language Model",
					"selectModel": "Select a model...",
					"noModels": "The VS Code Language Model API allows you to run models provided by other VS Code extensions (including but not limited to GitHub Copilot). The easiest way to get started is to install the Copilot and Copilot Chat extensions from the VS Code Marketplace.",
					"experimentalNote": "Note: This is a very experimental integration and may not work as expected. Please report any issues to the CoolCline GitHub repository.",
					"useCustomBaseUrl": "Use custom base URL"
				},
				"unbound": {
					"name": "Unbound",
					"title": "Unbound API Key",
					"getKey": "Get Unbound API Key",
					"useCustomBaseUrl": "Use custom base URL"
				},
				"deepseek": {
					"name": "DeepSeek",
					"title": "DeepSeek API Key",
					"description": "Use DeepSeek's high-performance AI model service",
					"getKey": "You can get a DeepSeek API key by signing up here",
					"useCustomBaseUrl": "Use custom base URL",
					"placeholder": "Enter API key..."
				}
			},
			"model": {
				"title": "Model",
				"selectPlaceholder": "Select a model...",
				"currentlySelected": "Currently selected model:",
				"search": "Search models..."
			},
			"common": {
				"modelCapabilityNote": "Note: CoolCline uses complex prompts and works best with Claude models. Less capable models may not work as expected."
			}
		},
		"autoApprove": {
			"title": "Auto-Approve Settings",
			"description": "The following settings allow CoolCline to automatically perform operations without requiring approval. Enable these settings only if you fully trust the AI and understand the associated security risks.",
			"readOnly": {
				"title": "Always approve read-only operations",
				"description": "When enabled, CoolCline will automatically view directory contents and read files without requiring you to click the Approve button."
			},
			"write": {
				"title": "Always approve write operations",
				"description": "Automatically create and edit files without requiring approval",
				"delay": {
					"title": "Write delay",
					"description": "Delay after writes to allow diagnostics to detect potential problems"
				}
			},
			"browser": {
				"title": "Always approve browser actions",
				"description": "Automatically perform browser actions without requiring approval\nNote: Only applies when the model supports computer use"
			},
			"retry": {
				"title": "Always retry failed API requests",
				"description": "Automatically retry failed API requests when server returns an error response",
				"delay": {
					"title": "Retry delay",
					"description": "Delay before retrying the request"
				}
			},
			"mcp": {
				"title": "Always approve MCP tools",
				"description": "Enable auto-approval of individual MCP tools in the MCP Servers view (requires both this setting and the tool's individual \"Always allow\" checkbox)"
			},
			"modeSwitch": {
				"title": "Always approve mode switching & task creation",
				"description": "Automatically switch between different AI modes and create new tasks without requiring approval"
			},
			"execute": {
				"title": "Always approve allowed execute operations",
				"description": "Automatically execute allowed terminal commands without requiring approval",
				"commands": {
					"title": "Allowed Auto-Execute Commands",
					"description": "Command prefixes that can be auto-executed when \"Always approve execute operations\" is enabled.",
					"placeholder": "Enter command prefix (e.g., 'git ')",
					"add": "Add"
				}
			}
		},
		"browser": {
			"title": "Browser Settings",
			"viewport": {
				"title": "Viewport size",
				"description": "Select the viewport size for browser interactions. This affects how websites are displayed and interacted with.",
				"options": {
					"largeDesktop": "Large Desktop (1280x800)",
					"smallDesktop": "Small Desktop (900x600)",
					"tablet": "Tablet (768x1024)",
					"mobile": "Mobile (360x640)"
				}
			},
			"screenshot": {
				"title": "Screenshot quality",
				"description": "Adjust the WebP quality of browser screenshots. Higher values provide clearer screenshots but increase token usage."
			}
		},
		"notification": {
			"title": "Notification Settings",
			"sound": {
				"title": "Enable sound effects",
				"description": "When enabled, CoolCline will play sound effects for notifications and events.",
				"volume": "Volume"
			}
		},
		"advanced": {
			"title": "Advanced Settings",
			"experimental": {
				"warning": "⚠️",
				"features": {
					"diffStrategy": {
						"name": "Use experimental diff strategy",
						"description": "When enabled, CoolCline will use a more advanced diff strategy that can handle more complex code changes. This is still experimental and may not work correctly in all cases."
					}
				}
			},
			"rateLimit": {
				"title": "Rate limit",
				"description": "Minimum time between API requests."
			},
			"terminalOutput": {
				"title": "Terminal output limit",
				"description": "Maximum number of lines to include in terminal output when executing commands. When exceeded lines will be removed from the middle, saving tokens."
			},
			"diff": {
				"title": "Enable editing through diffs",
				"description": "When enabled, CoolCline will be able to edit files more quickly and will automatically reject truncated full-file writes. Works best with the latest Claude 3.5 Sonnet model.",
				"matchPrecision": {
					"title": "Match precision",
					"description": "This slider controls how precisely code sections must match when applying diffs. Lower values allow more flexible matching but increase the risk of incorrect replacements. Use values below 100% with extreme caution."
				}
			}
		},
		"experiments": {
			"title": "Experimental Features",
			"description": "Enable or disable experimental features that are still under development",
			"features": {
				"DIFF_STRATEGY": {
					"name": "Use experimental unified diff strategy",
					"description": "Enable the experimental unified diff strategy. This strategy might reduce the number of retries caused by model errors but may cause unexpected behavior or incorrect edits. Only enable if you understand the risks and are willing to carefully review all changes."
				},
				"SEARCH_AND_REPLACE": {
					"name": "Use experimental search and replace tool",
					"description": "Enable the experimental search and replace tool, allowing CoolCline to replace multiple instances of a search term in one request."
				},
				"INSERT_BLOCK": {
					"name": "Use experimental insert content tool",
					"description": "Enable the experimental insert content tool, allowing CoolCline to insert content at specific line numbers without needing to create a diff."
				}
			}
		},
		"footer": {
			"description": "If you have any questions or feedback, feel free to open an issue at",
			"resetState": "Reset State",
			"resetStateDescription": "This will reset all global state and secret storage in the extension."
		}
	}
}
